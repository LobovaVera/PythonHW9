from loader import dp
from loader import *
from aiogram.types import Message
from random import randint
from aiogram.types import ReplyKeyboardRemove
from keyboards import spm_kb
from keyboards import bot_game_kb
from keyboards import kb
from config import total, player_switch



@dp.message_handler(commands = ['candies'])
async def start_candy_game(message:Message):
    await bot.send_message(chat_id=message.from_user.id, text = "–ö–æ–Ω—Ñ–µ—Ç–∫–∏!", reply_markup= ReplyKeyboardRemove())
    await message.answer("–£—Ä–∞ –∏–≥—Ä–∞–µ–º –≤ –∫–æ–Ω—Ñ–µ—Ç–∫–∏!\n –î–ª—è –∏–≥—Ä—ã —Å–æ –º–Ω–æ–π –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ò–≥—Ä–∞–µ–º —Å –±–æ—Ç–æ–º' \n  –¥–ª—è –∏–≥—Ä—ã —Å –¥—Ä—É–≥–æ–º –∂–¥–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è\n ", reply_markup = spm_kb)
    
 
@dp.message_handler(commands = ['bot_candy_game'])
async def bot_candy_game(message:Message):
    global total
    global player_switch

    total = int(randint(30, 101))
    player_switch = randint(0,2)

    if player_switch:
        await message.answer(f'–ö–∏–¥–∞–µ–º –∂—Ä–µ–±–∏–π. –ü–µ–≤—ã–º —Ö–æ–¥–∏—Ç {message.from_user.first_name}. –ù–∞ —Å—Ç–æ–ª–µ –ª–µ–∂–∏—Ç {total} –∫–æ–Ω—Ñ–µ—Ç, —Å–∫–æ–ª—å–∫–æ –±–µ—Ä–µ—à—å?')
    else:
        await message.answer(f'–ö–∏–¥–∞–µ–º –∂—Ä–µ–±–∏–π. –ü–µ–≤—ã–º —Ö–æ–∂—É —è! –¢—Ä–µ–ø–µ—â–∏, –∫—É—Å–æ–∫ –º—è—Å–∞!')
        candy_bot_num = total%29
        await message.answer(f"–ú–æ–π —Ö–æ–¥! –ù–∞ —Å—Ç–æ–ª–µ {total} –∫–æ–Ω—Ñ–µ—Ç! –Ø –±–µ—Ä—É {candy_bot_num} –∫–æ–Ω—Ñ–µ—Ç.")
        total -= candy_bot_num
        player_switch = True
        if total <=0:
            await winner_time()
            return True
        else:
            await message.answer(f" –ù–∞ —Å—Ç–æ–ª–µ {total} –∫–æ–Ω—Ñ–µ—Ç! –°–∫–æ–ª—å–∫–æ –≤–æ–∑—å–º–µ—à—å? ")
        



        
@dp.message_handler()
async def candy_game(message:Message):
    global player_switch
    global total
    global userId
    userId = message.from_user.id
    count = int(message.text)
    name = message.from_user.first_name
    if message.text.isdigit() and 0 < count <29:
    
            total -= count
            player_switch = False
            await message.answer(f" {name} –≤–∑—è–ª {count} –∫–æ–Ω—Ñ–µ—Ç –∏ –Ω–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {total}")

            if total <= 0:
                await winner_time()
                return True
            
            else:   # —Ö–æ–¥–∏—Ç –±–æ—Ç
                if total <= 28:
                    candy_bot_num = total
                elif total%29 == 0:
                    await message.answer("–Ø –∏ –Ω–µ –∑–Ω–∞–ª, —á—Ç–æ –ª—é–¥–∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–∞–∫–∏–µ —É–º–Ω—ã–µ! –•–æ—Ç—è, –º–æ–∂–µ—Ç —ç—Ç–æ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å...")
                    await bot.send_sticker(message.from_user.id, sticker ="CAACAgIAAxkBAAEHiqNj2l0YzrSBT5H9jaCsTMOSszikiwACGAADwDZPE9b6J7-cahj4LgQ")
                    candy_bot_num = randint(1, 28)
        
                else:
                    candy_bot_num = total%29
            
                await message.answer(f"–ú–æ–π —Ö–æ–¥! –ù–∞ —Å—Ç–æ–ª–µ {total} –∫–æ–Ω—Ñ–µ—Ç! –Ø –±–µ—Ä—É {candy_bot_num} –∫–æ–Ω—Ñ–µ—Ç.")
                total -= candy_bot_num
                player_switch = True
            if total <=0:
                await winner_time()
                return True
            else:
                await message.answer(f" –ù–∞ —Å—Ç–æ–ª–µ {total} –∫–æ–Ω—Ñ–µ—Ç! –°–∫–æ–ª—å–∫–æ –≤–æ–∑—å–º–µ—à—å? ")




async def winner_time():
    global userId
    if player_switch:
        await bot.send_message(chat_id=userId, text = "–Ø –ø–æ–±–µ–¥–∏–ª! –û—á–µ–≤–∏–¥–Ω–æ –∏—Å–∫—É—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–∞–∑—É–º —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–µ–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ!", reply_markup= kb)
        
    else:
        await bot.send_message(chat_id=userId, text ="–¢—ã –ø–æ–±–µ–¥–∏–ª? üò≠ –ù–µ –º–æ–∂–µ—Ç —Ç–∞–∫–æ–≥–æ –±—ã—Ç—å! –î–∞–≤–∞–π –µ—â–µ —Ä–∞–∑!\n ", reply_markup=bot_game_kb)
    
